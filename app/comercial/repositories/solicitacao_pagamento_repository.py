from __future__ import annotations

from typing import Protocol
from collections.abc import Iterable  # <- em vez de typing.Iterable
from app.comercial.persistence.solicitacao_pagamento_orm import SolicitacaoPagamentoORM


class SolicitacaoPagamentoRepository(Protocol):
    """Contrato que define as operações sobre solicitações de pagamento."""

    async def get_by_id(self, id_solicitacao: int) -> SolicitacaoPagamentoORM | None: ...
    async def list_by_assinatura(self, id_assinatura: int) -> Iterable[SolicitacaoPagamentoORM]: ...
    async def list_all(self) -> Iterable[SolicitacaoPagamentoORM]: ...
    async def add(self, solicitacao: SolicitacaoPagamentoORM) -> SolicitacaoPagamentoORM: ...
    async def update(self, solicitacao: SolicitacaoPagamentoORM) -> SolicitacaoPagamentoORM: ...
    async def delete(self, id_solicitacao: int) -> None: ...
