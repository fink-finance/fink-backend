from __future__ import annotations

from typing import Protocol
from collections.abc import Iterable  # <- troque aqui
from app.comercial.persistence.tipo_pagamento_orm import TipoPagamentoORM


class TipoPagamentoRepository(Protocol):
    """Contrato para o repositÃ³rio de Tipos de Pagamento."""

    async def get_by_id(self, id_pagamento: int) -> TipoPagamentoORM | None: ...
    async def get_by_tipo(self, tipo_pagamento: str) -> TipoPagamentoORM | None: ...
    async def list_all(self) -> Iterable[TipoPagamentoORM]: ...
    async def add(self, tipo_pagamento: TipoPagamentoORM) -> TipoPagamentoORM: ...
    async def delete(self, id_pagamento: int) -> None: ...
    async def update(self, tipo_pagamento: TipoPagamentoORM) -> TipoPagamentoORM: ...
