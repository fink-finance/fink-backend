[project]
name = "fink-backend"
version = "0.1.0"
description = "A modern FastAPI backend application"
readme = "README.md"
requires-python = ">=3.11,<3.14"
authors = [{ name = "brunoribeirol", email = "araujoribeiro.bruno@gmail.com" }]

# Dependencies PEP 621
dependencies = [
  "fastapi>=0.116.1",
  "uvicorn[standard]>=0.35.0",
  "pydantic-settings>=2.10.1",
  "sqlalchemy>=2.0.43",
  "asyncpg>=0.30.0",
  "alembic>=1.16.5",
  "redis>=6.4.0",
  "httpx>=0.28.1",
  "greenlet>=3.0.0",
]

[tool.poetry]
package-mode = false

# ----- Dev dependencies via Poetry “groups” -----
[tool.poetry.group.dev.dependencies]
pytest = ">=8.4.2"
pytest-asyncio = ">=1.1.0"
pytest-cov = ">=6.0.0"
coverage = ">=7.6.0"
ruff = ">=0.6.9"
black = ">=24.8.0"
mypy = ">=1.11.2"
pre-commit = ">=3.8.0"

# ---------------- Ruff / Black / Pytest / Mypy ----------------

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = ["migrations"]

[tool.ruff.lint]
select = ["E","F","W","B","UP","I","C90","D",]
ignore = ["D100", "D101", "D104","D105","D107"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"app/repositories/**/*_repository.py" = ["D102"]
"app/persistence/db/**/*.py" = ["UP037"]
"app/mappers/**/*.py" = ["D103"]

[tool.black]
line-length = 120
target-version = ["py312"]

[tool.pytest.ini_options]
addopts = "-q --cov=."
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = [
    "app.identidade.persistence.pessoa_orm",
    "app.identidade.persistence.sessao_orm",
    "app.metas.persistence.meta_orm",
    "app.alertas.persistence.alerta_orm",
    "app.comercial.persistence.plano_orm",
    "app.comercial.persistence.assinatura_orm",
    "app.comercial.persistence.tipo_pagamento_orm",
    "app.comercial.persistence.solicitacao_pagamento_orm",
]
disable_error_code = ["name-defined"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
